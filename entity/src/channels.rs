//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "channels")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub name: String,
    pub settings: Json,
    #[sea_orm(created_at)]
    pub created_at: DateTimeWithTimeZone,
    #[sea_orm(updated_at)]
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::banned_words::Entity")]
    BannedWords,
    #[sea_orm(has_many = "super::channel_users::Entity")]
    ChannelUsers,
}

impl Related<super::banned_words::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BannedWords.def()
    }
}

impl Related<super::channel_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ChannelUsers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
